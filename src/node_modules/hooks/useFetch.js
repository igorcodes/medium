import {useState, useEffect} from 'react'
import axios from 'axios'
import useLocalStorage from 'hooks/useLocalStorage'

export default url => {
	const baseUrl = 'https://conduit.productionready.io/api'
	const [isLoading, setIsLoading] = useState(false)
	const [response, setResponse] = useState(null)
	const [error, setError] = useState(null)
	const [options, setOptions] = useState({})  
	const [token] = useLocalStorage('token')
	console.log('token', token)

	const doFetch = ( options = {} ) => {
		setOptions(options)    
		setIsLoading(true)
	}



			
	useEffect(() => {
		const requestOptions = {
			...options, 
			...{
				headers: {
					authorization: token ? `Token ${token}` : ''
				}
			}
		}
		if (!isLoading) {
			return
		}
		
		//первым ключем указываю url который является публичным api и второй параметр это обьект с полями, и если не указываем этот обьект то для axios это будет get request
		axios(baseUrl + url, requestOptions)
		  .then(res => {
			console.log('succes', res)
			setIsLoading(false)
			setResponse(res.data) 
		}).catch(error => {
			console.log('error', error)
			setIsLoading(false)
			setError(error.response.data) 
		})
	}, [isLoading, options, url, token]) //вызывать useEffect только когда меняется isLoading, если этот массив не поставить тут то useEffect будет вызываться при каждом перерендере
	//console.log('email', email, password);

	return [{isLoading, response, error}, doFetch]
}

