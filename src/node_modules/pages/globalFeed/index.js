import React, { useEffect, Fragment } from 'react'
import { stringify } from 'query-string'
import PopularTags from '../../components/popularTags'

import useFetch from '../../hooks/useFetch'
import Feed from '../../components/feed'
import Pagination from '../../components/pagination'
import {getPaginator, limit} from '../../utils'
import FeedTogler from '../../components/feedToggler'

const GlobalFeed = () => {
	console.log('window.location', window.location)
	console.log('window.location.search', window.location.search)
	
	const queryString = require('query-string');

	const parsed = queryString.parse(window.location.search)
	const {offset, currentPage} = getPaginator(window.location.search)
	console.log('currentPage', currentPage)
	
	const stringifieldParams = queryString.stringify({
		limit,
		offset
	})
	const apiUrl = `/articles?${stringifieldParams}`
	const [{response, isLoading, error}, doFetch] = useFetch(apiUrl)

	const url = window.location.pathname
	console.log('url', url)

	console.log('response', response)

	useEffect(() => {
		doFetch()
	}, [currentPage])
	
	return (
		<div className='home-page'>
			<div className='banner'>
				<div className='container'>
					<h1>Blog - Medium clone</h1>
					<p>A place to share knowledge</p>
				</div>
			</div>
			<div className='container page'>
				<div className='row'>
					<div className='col-md-9'>
						<FeedTogler tagName="foo" />
						{isLoading && <div>Loading...</div>}
						{error && <div>Some error happened</div>}
						{!isLoading && response && ( 
							<Fragment>
							<Feed articles={response.articles} />
							<Pagination total={response.articlesCount} limit={limit} url={url} currentPage={currentPage} />
							</Fragment>
							)}
					</div>
					<div className='col-md-3'>
						<PopularTags />
					</div>
				</div>
			</div>
		</div>
	)
}

export default GlobalFeed
