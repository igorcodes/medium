import {useEffect, useContext} from 'react'
import useFetch from 'hooks/useFetch'
import {CurrentUserContext} from 'context/currentUser'
import useLocalStorage from 'hooks/useLocalStorage'

const CurrentUserChecker = ({children}) => {
	const [{response}, doFetch] = useFetch('/user')
	const [CurrentUserState, setCurrentUserState] = useContext(CurrentUserContext)
	const [token] = useLocalStorage('token') //просто проверяю useLocalStorage есть токент или нет

	useEffect(() => { //первый юзеффект при инициализации
		if (!token) {
			setCurrentUserState(state => ({
			...state,
			isLoggedIn: false //если нет токена в локалсторедж то обновляю isLoggedIn на фолсе
		}))
			return //и тогда мы не идем дальше до doFetch() и не буду его вызывать
		}

		doFetch()
		setCurrentUserState(state => ({
			...state,
			isLoading: true
		}))
	}, [token, setCurrentUserState])

	useEffect(() => {
		if (!response) { //если респонса нет то просто выходим
			return
		}

		setCurrentUserState(state => ({
			...state, 
			isLoggedIn: true,
			isLoading: false,
			currentUser: response.user
		}))
	}, [response, setCurrentUserState])

	return children
}

export default CurrentUserChecker